#####################################################################
# Created by: Nahúm Manuel Martín Vegas                             #
# URL: https://github.com/nadamas2000/activity-watchdog             #
# File: activity-watchdog.conf                                      #
# Version: V1                                                       #
# Date: 03-dec-2019                                                 #
# Developed in: Facultat d´informàtica de Barcelona (FIB)           #
#               Universitat Politécnica de Catalunya (UPC)          #
#                                                                   #
# Project name: Activity-watchdog for Raspberry Pi (Raspbian linux) #
# Project files:        activity-watchdog.sh                        #
#                       activity-watchdog.conf                      #
#                       software-watchdog.shlib                     #
#                       idle-watchdog.shlib                         #
# Dependecies:  bash                                                #
#               procps                                              #
#               coreutils                                           #
#               xprintidle (only for idle-watchdog function)        #
#####################################################################


####################### GENERAL CONFIGURATION ###########################

# User to observe. Only one user. To use this software for more user
# you can use different instances in different execution folders.
USER="pi"

# Logfile address. This address can't contains a final character "/".
# $EXEDIR (execution directory) by default to store the logfile in the
# same folder of the software.
LOGFILEDIR=$EXEDIR

# Logfile name.
LOGFILENAME="activity-watchdog.log"

# New Logfile by execution. The oldest logfile is rewrited.
LOG_FILE_BY_EXECUTION=true

# Process that the watchdogs waiting for.
WAITING_FOR_PROC="Xorg"

# First timeout to load process in WAITING_FOR_PROC parameter (seconds).
# Minimum value is 0. Default value 20.
FIRST_WAITING=20

# Observation interval (seconds). Minimum 1.
OBS_INTERVAL=1

# Idle watchdog activation.
IDLE_WATCHDOG_ENABLED=true

# Force-list watchdog activation.
FORCE_LIST_WATCHDOG_ENABLED=true

# Blacklist watchdog activation.
BLACKLIST_WATCHDOG_ENABLED=true


################ FORCE-LIST WATCHDOG CONFIGURATION ###############

# List of pairs "process name" - "action to execute" that we force on.
# Always in pairs. This parameter is a shell array of strings.
# The process name can't be contain parameters.
FORCE_LIST_PROC=("chromium-browse"      "/home/soft/bin/start-chrome-pi.sh")


############### BLACKLIST WATCHDOG CONFIGURATION #################

# General script or execution command by Blacklist violation.
# Empty by default.
GENERAL_VIOLATION_PROCEDURE="/home/soft/bin/reiniciarX.sh"

# List of pairs "process name" - "action to execute" that we need to
# preserve not executed.
# Always in pairs. This parameter is a shell array of strings.
# The process name can't be contain execution parameters.
# $GENERAL_VIOLATION_PROCEDURE by default. You can use other personal
# scripts.
BLACKLIST_PROC=("pcmanfm"       $GENERAL_VIOLATION_PROCEDURE \
                "vi"            $GENERAL_VIOLATION_PROCEDURE \
                "vim"           $GENERAL_VIOLATION_PROCEDURE \
                "nano"          $GENERAL_VIOLATION_PROCEDURE \
                "lxterminal"    $GENERAL_VIOLATION_PROCEDURE \
                "xterm"         $GENERAL_VIOLATION_PROCEDURE \
                "uxterm"        $GENERAL_VIOLATION_PROCEDURE)

# Exception process list specified with or without parameters in a single
# string by exception. You can use "pgrep -a" to obtain specified parameters
# by process.
EXCEPTION_LIST=("pcmanfm --desktop --profile LXDE")


##################### IDLE WATCHDOG CONFIGURATION #######################

# Process list to kill when idle time ends.
IDLE_KILL_LIST=("chromium-browse")

# Time limit in minutes to kill all the processes.
# Minimum and default value 1 minute.
MINUTS_IN_IDLE_STATE=1

# Margin time to close all processes in the list.
# Minimum value 0. Default value 5.
SECONDS_TO_CLOSE=5

# Timefile activation. Default value false.
TIMEFILE_ENABLED=false

# File to watch the current idle time and other info.
TIMEFILENAME="idle-watchdog.time"
